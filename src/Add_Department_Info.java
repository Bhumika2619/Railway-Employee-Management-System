/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author patil
 */
import java.sql.*;
import javax.swing.*;               
import java.text.ParseException;       // For handling date parsing errors
import java.text.SimpleDateFormat;     // For date parsing
import javax.swing.JOptionPane;        // For showing message dialogs

public class Add_Department_Info extends javax.swing.JFrame {

    /**
     * Creates new form Add_Department_Info
     */
    public Add_Department_Info() {
        initComponents();
        setDefaultCloseOperation(Add_Department_Info.DISPOSE_ON_CLOSE);
        
        update.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        updateActionPerformed(evt);
    }
});
        
       delete.setText("DELETE");

        delete.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteActionPerformed(evt);
    }
});


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deptid = new javax.swing.JButton();
        deptname = new javax.swing.JButton();
        location = new javax.swing.JButton();
        headofdepartment = new javax.swing.JButton();
        t1 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        t3 = new javax.swing.JTextField();
        t4 = new javax.swing.JTextField();
        addinfo = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        deptid.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deptid.setText("DEPT ID");
        deptid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptidActionPerformed(evt);
            }
        });

        deptname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deptname.setText("DEPT NAME");

        location.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        location.setText("LOCATION");

        headofdepartment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        headofdepartment.setText("HEAD OF DEPARTMENT");

        addinfo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addinfo.setText("ADD INFO");
        addinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addinfoActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(headofdepartment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(location, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deptname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deptid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t1)
                            .addComponent(t2)
                            .addComponent(t3)
                            .addComponent(t4, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addinfo)
                        .addGap(41, 41, 41)
                        .addComponent(update)
                        .addGap(33, 33, 33)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(cancel)
                        .addGap(129, 129, 129))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t1)
                    .addComponent(deptid, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deptname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headofdepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deptidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptidActionPerformed

    private void addinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addinfoActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost/railway";
String user = "root";
String pwd = "123456";

try {
    // 1. Get all input
    String deptname = t2.getText().trim();
    String location = t3.getText().trim();
    String headofdepartment = t4.getText().trim();
   

    // 2. Connection
    Connection conn = DriverManager.getConnection(url, user, pwd);

    // 3. 
    String checkQuery = "SELECT * FROM department WHERE DEPT_NAME = ? AND HEAD_OF_DEPARTMENT=? ";
    PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
    checkStmt.setString(1, deptname );
    checkStmt.setString(2, headofdepartment);
    ResultSet rs = checkStmt.executeQuery();

    
    if (rs.next()) {
         JOptionPane.showMessageDialog(this, "Department with this name and head of department already exists.");
    } else {
        // 5. Insert new department (auto DEPT_ID)
        String insertQuery = "INSERT INTO department (DEPT_NAME, LOCATION, HEAD_OF_DEPARTMENT) "
                           + "VALUES (?, ?, ?)";
        PreparedStatement insertStmt = conn.prepareStatement(insertQuery);
        insertStmt.setString(1, deptname);
        insertStmt.setString(2, location);
        insertStmt.setString(3, headofdepartment);
       
        insertStmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Department added successfully.");
        insertStmt.close();
    }

    // Cleanup
    rs.close();
    checkStmt.close();
    conn.close();

    // Clear fields
    t1.setText(""); // optional if you're showing DEPT_ID
    t2.setText(""); t3.setText(""); t4.setText("");

}catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage());
    e.printStackTrace();
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    e.printStackTrace();
}

        
    }//GEN-LAST:event_addinfoActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
       
    String url = "jdbc:mysql://localhost/railway";
    String user = "root";
    String pwd = "123456";

    try {
        String deptIdStr = t1.getText().trim();
        String deptName = t2.getText().trim();
        String location = t3.getText().trim();
        String headOfDept = t4.getText().trim();

        if (deptIdStr.isEmpty() || deptName.isEmpty() || location.isEmpty() || headOfDept.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields before updating.");
            return;
        }

        int deptId = Integer.parseInt(deptIdStr);

        Connection conn = DriverManager.getConnection(url, user, pwd);

        // Check if department exists
        String checkQuery = "SELECT * FROM department WHERE DEPT_ID = ?";
        PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
        checkStmt.setInt(1, deptId);
        ResultSet rs = checkStmt.executeQuery();

        if (!rs.next()) {
            JOptionPane.showMessageDialog(this, "No department found with DEPT_ID: " + deptId);
        } else {
            // Update the record
            String updateQuery = "UPDATE department SET DEPT_NAME = ?, LOCATION = ?, HEAD_OF_DEPARTMENT = ? WHERE DEPT_ID = ?";
            PreparedStatement updateStmt = conn.prepareStatement(updateQuery);
            updateStmt.setString(1, deptName);
            updateStmt.setString(2, location);
            updateStmt.setString(3, headOfDept);
            updateStmt.setInt(4, deptId);

            int rows = updateStmt.executeUpdate();

            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Department updated successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Update failed.");
            }

            updateStmt.close();
        }

        rs.close();
        checkStmt.close();
        conn.close();

        // Clear fields
        t1.setText("");
        t2.setText("");
        t3.setText("");
        t4.setText("");

    } catch (NumberFormatException nfe) {
        JOptionPane.showMessageDialog(this, "DEPT_ID must be a valid number.");
    } catch (SQLException sqle) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + sqle.getMessage());
        sqle.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage());
        e.printStackTrace();
    }

    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
    String url = "jdbc:mysql://localhost/railway";
    String user = "root";
    String pwd = "123456";

    try {
        String deptIdStr = t1.getText().trim();

        if (deptIdStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the DEPT_ID to delete.");
            return;
        }

        int deptId = Integer.parseInt(deptIdStr);

        // Confirm before deleting
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete department ID: " + deptId + "?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return; // Cancel deletion
        }

        // Connect to DB
        Connection conn = DriverManager.getConnection(url, user, pwd);

        // Check if department exists
        String checkQuery = "SELECT * FROM department WHERE DEPT_ID = ?";
        PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
        checkStmt.setInt(1, deptId);
        ResultSet rs = checkStmt.executeQuery();

        if (!rs.next()) {
            JOptionPane.showMessageDialog(this, "No department found with DEPT_ID: " + deptId);
        } else {
            // Delete the department
            String deleteQuery = "DELETE FROM department WHERE DEPT_ID = ?";
            PreparedStatement deleteStmt = conn.prepareStatement(deleteQuery);
            deleteStmt.setInt(1, deptId);

            int rows = deleteStmt.executeUpdate();

            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Department deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Delete failed.");
            }

            deleteStmt.close();
        }

        rs.close();
        checkStmt.close();
        conn.close();

        // Clear all fields
        t1.setText("");
        t2.setText("");
        t3.setText("");
        t4.setText("");

    } catch (NumberFormatException nfe) {
        JOptionPane.showMessageDialog(this, "DEPT_ID must be a valid number.");
    } catch (SQLException sqle) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + sqle.getMessage());
        sqle.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage());
        e.printStackTrace();
    }

    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Department_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Department_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Department_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Department_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Department_Info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addinfo;
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JButton deptid;
    private javax.swing.JButton deptname;
    private javax.swing.JButton headofdepartment;
    private javax.swing.JButton location;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
