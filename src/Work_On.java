/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author patil
 */
import java.sql.*;
import javax.swing.*;
public class Work_On extends javax.swing.JFrame {

    /**
     * Creates new form Work_On
     */
    public Work_On() {
        initComponents();
        setDefaultCloseOperation(Work_On.DISPOSE_ON_CLOSE);
        
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteActionPerformed(evt);
    }
});


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        empid = new javax.swing.JButton();
        t1 = new javax.swing.JTextField();
        trainid = new javax.swing.JButton();
        t2 = new javax.swing.JTextField();
        role = new javax.swing.JButton();
        t3 = new javax.swing.JTextField();
        dateofassign = new javax.swing.JButton();
        t4 = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        empid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        empid.setText("EMP_ID");

        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        trainid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        trainid.setText("TRAIN_ID");

        role.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        role.setText("ROLE");

        dateofassign.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dateofassign.setText("DATE_OF_ASSIGN");

        add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dateofassign, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addComponent(role, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(trainid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(empid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(t4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                        .addComponent(t3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(t2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(t1, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empid)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainid)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(role)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateofassign)
                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed
    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        // TODO add your handling code here:
    } 
    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        // TODO add your handling code here:
    } 
    private void t4ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        // TODO add your handling code here:
    } 
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
    String url = "jdbc:mysql://localhost/railway";
String user = "root";
String pwd = "123456";

// Get input from GUI
int empid = Integer.parseInt(t1.getText());
int trainid = Integer.parseInt(t2.getText());
String role = t3.getText();
String dateText = t4.getText(); // should be in yyyy-MM-dd format

// SQL queries
String checkQuery = "SELECT * FROM work_on WHERE EMP_ID = ? AND TRAIN_ID = ?";
String updateQuery = "UPDATE work_on SET ROLE = ?, DATE_OF_ASSIGN = ? WHERE EMP_ID = ? AND TRAIN_ID = ?";
String insertQuery = "INSERT INTO work_on (EMP_ID, TRAIN_ID, ROLE, DATE_OF_ASSIGN) VALUES (?, ?, ?, ?)";

try {
    Connection conn = DriverManager.getConnection(url, user, pwd);

    // Check if the record exists
    PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
    checkStmt.setInt(1, empid);
    checkStmt.setInt(2, trainid);
    ResultSet rs = checkStmt.executeQuery();

    if (rs.next()) {
        // Record exists — perform update
        PreparedStatement updateStmt = conn.prepareStatement(updateQuery);
        updateStmt.setString(1, role);
        updateStmt.setString(2, dateText);
        updateStmt.setInt(3, empid);
        updateStmt.setInt(4, trainid);

        updateStmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Record updated successfully");

        updateStmt.close();
    } else {
        // No record found — perform insert
        PreparedStatement insertStmt = conn.prepareStatement(insertQuery);
        insertStmt.setInt(1, empid);
        insertStmt.setInt(2, trainid);
        insertStmt.setString(3, role);
        insertStmt.setString(4, dateText);

        insertStmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "One record added successfully");

        insertStmt.close();
    }

    // Cleanup
    rs.close();
    checkStmt.close();
    conn.close();

    // Clear input fields
    t1.setText(null);
    t2.setText(null);
    t3.setText(null);
    t4.setText(null);

} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage());
    e.printStackTrace();
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    e.printStackTrace();
}


        
    }//GEN-LAST:event_addActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
                                           
    String url = "jdbc:mysql://localhost/railway";
    String user = "root";
    String pwd = "123456";

    try {
        // Get input values from text fields
        int empidVal = Integer.parseInt(t1.getText());
        int trainidVal = Integer.parseInt(t2.getText());
        String roleVal = t3.getText();
        String dateVal = t4.getText(); // Format: yyyy-MM-dd

        // Check for empty fields
        if (roleVal.isEmpty() || dateVal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields before updating.");
            return;
        }

        // Update query
        String updateQuery = "UPDATE work_on SET ROLE = ?, DATE_OF_ASSIGN = ? WHERE EMP_ID = ? AND TRAIN_ID = ?";

        Connection conn = DriverManager.getConnection(url, user, pwd);
        PreparedStatement stmt = conn.prepareStatement(updateQuery);

        stmt.setString(1, roleVal);
        stmt.setString(2, dateVal);
        stmt.setInt(3, empidVal);
        stmt.setInt(4, trainidVal);

        int rowsAffected = stmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Record updated successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "No matching record found to update.");
        }

        // Clean up
        stmt.close();
        conn.close();

        // Clear fields after update
        t1.setText(null);
        t2.setText(null);
        t3.setText(null);
        t4.setText(null);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "EMP_ID and TRAIN_ID must be valid integers.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage());
        e.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        e.printStackTrace();
    }

    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
                                               
    String url = "jdbc:mysql://localhost/railway";
    String user = "root";
    String pwd = "123456";

    try {
        // Get EMP_ID and TRAIN_ID from the form
        int empidVal = Integer.parseInt(t1.getText());
        int trainidVal = Integer.parseInt(t2.getText());

        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return; // User chose "No"
        }

        // Delete query
        String deleteQuery = "DELETE FROM work_on WHERE EMP_ID = ? AND TRAIN_ID = ?";

        Connection conn = DriverManager.getConnection(url, user, pwd);
        PreparedStatement stmt = conn.prepareStatement(deleteQuery);

        stmt.setInt(1, empidVal);
        stmt.setInt(2, trainidVal);

        int rowsDeleted = stmt.executeUpdate();

        if (rowsDeleted > 0) {
            JOptionPane.showMessageDialog(this, "Record deleted successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "No matching record found.");
        }

        // Cleanup
        stmt.close();
        conn.close();

        // Clear input fields
        t1.setText(null);
        t2.setText(null);
        t3.setText(null);
        t4.setText(null);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "EMP_ID and TRAIN_ID must be valid integers.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage());
        e.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        e.printStackTrace();
    }

    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Work_On.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Work_On.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Work_On.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Work_On.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Work_On().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton cancel;
    private javax.swing.JButton dateofassign;
    private javax.swing.JButton delete;
    private javax.swing.JButton empid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton role;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JButton trainid;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
